import { defineConfig, Plugin } from "vite";
import { minify, Options as MinifierOptions } from "html-minifier-terser";

const defaultOptions: MinifierOptions = {
  minifyCSS: true,
  collapseWhitespace: true,
  collapseInlineTagWhitespace: false,
  removeTagWhitespace: false,
  trimCustomFragments: false,
  html5: false,
  keepClosingSlash: false,
  minifyJS: false,
  removeAttributeQuotes: false,
  removeComments: false,
  removeRedundantAttributes: false,
  removeScriptTypeAttributes: false,
  removeStyleLinkTypeAttributes: false,
  useShortDoctype: false,
  caseSensitive: false,
  collapseBooleanAttributes: false,
  conservativeCollapse: false,
  continueOnParseError: false,
  decodeEntities: false,
  includeAutoGeneratedTags: false,
  minifyURLs: false,
  noNewlinesBeforeTagClose: false,
  preserveLineBreaks: false,
  preventAttributesEscaping: false,
  processConditionalComments: false,
  removeEmptyAttributes: false,
  removeEmptyElements: false,
  removeOptionalTags: false,
  sortAttributes: false,
  sortClassName: false,
};

function htmlMinimizePlugin(): Plugin {
  return {
    apply: "build",
    enforce: "post",
    async generateBundle(_, bundle) {
      for (const outBundle of Object.values(bundle)) {
        if (
          // only read js files
          outBundle.type === "chunk"
        ) {
          outBundle.code = await minify(
            outBundle.code as string,
            defaultOptions
          );
        }
      }
    },
    name: "html-minimize",
  };
}
export default defineConfig({
  plugins: [htmlMinimizePlugin()],
});
